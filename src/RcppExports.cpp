// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// bfsCpp
void bfsCpp(arma::mat& S, const arma::mat& G);
RcppExport SEXP _mcgraph_bfsCpp(SEXP SSEXP, SEXP GSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat& >::type S(SSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type G(GSEXP);
    bfsCpp(S, G);
    return R_NilValue;
END_RCPP
}
// frgCpp
void frgCpp(arma::mat& P, const arma::mat& A, arma::uword iter, double W, double L, double temp_prop, double force_prop, double quench_prop, double simmering_prop);
RcppExport SEXP _mcgraph_frgCpp(SEXP PSEXP, SEXP ASEXP, SEXP iterSEXP, SEXP WSEXP, SEXP LSEXP, SEXP temp_propSEXP, SEXP force_propSEXP, SEXP quench_propSEXP, SEXP simmering_propSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat& >::type P(PSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type A(ASEXP);
    Rcpp::traits::input_parameter< arma::uword >::type iter(iterSEXP);
    Rcpp::traits::input_parameter< double >::type W(WSEXP);
    Rcpp::traits::input_parameter< double >::type L(LSEXP);
    Rcpp::traits::input_parameter< double >::type temp_prop(temp_propSEXP);
    Rcpp::traits::input_parameter< double >::type force_prop(force_propSEXP);
    Rcpp::traits::input_parameter< double >::type quench_prop(quench_propSEXP);
    Rcpp::traits::input_parameter< double >::type simmering_prop(simmering_propSEXP);
    frgCpp(P, A, iter, W, L, temp_prop, force_prop, quench_prop, simmering_prop);
    return R_NilValue;
END_RCPP
}
// graph2dataCpp
void graph2dataCpp(arma::mat& D, const arma::mat& A, size_t n, size_t iter, double val, double sd, double prop, double noise, bool init);
RcppExport SEXP _mcgraph_graph2dataCpp(SEXP DSEXP, SEXP ASEXP, SEXP nSEXP, SEXP iterSEXP, SEXP valSEXP, SEXP sdSEXP, SEXP propSEXP, SEXP noiseSEXP, SEXP initSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat& >::type D(DSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type A(ASEXP);
    Rcpp::traits::input_parameter< size_t >::type n(nSEXP);
    Rcpp::traits::input_parameter< size_t >::type iter(iterSEXP);
    Rcpp::traits::input_parameter< double >::type val(valSEXP);
    Rcpp::traits::input_parameter< double >::type sd(sdSEXP);
    Rcpp::traits::input_parameter< double >::type prop(propSEXP);
    Rcpp::traits::input_parameter< double >::type noise(noiseSEXP);
    Rcpp::traits::input_parameter< bool >::type init(initSEXP);
    graph2dataCpp(D, A, n, iter, val, sd, prop, noise, init);
    return R_NilValue;
END_RCPP
}
// lvsCpp
void lvsCpp(arma::mat& A, arma::mat& RS, const arma::mat& cor_mat, const arma::mat& D, double rs, int k);
RcppExport SEXP _mcgraph_lvsCpp(SEXP ASEXP, SEXP RSSEXP, SEXP cor_matSEXP, SEXP DSEXP, SEXP rsSEXP, SEXP kSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat& >::type A(ASEXP);
    Rcpp::traits::input_parameter< arma::mat& >::type RS(RSSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type cor_mat(cor_matSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type D(DSEXP);
    Rcpp::traits::input_parameter< double >::type rs(rsSEXP);
    Rcpp::traits::input_parameter< int >::type k(kSEXP);
    lvsCpp(A, RS, cor_mat, D, rs, k);
    return R_NilValue;
END_RCPP
}
// tvsRcpp
List tvsRcpp(const DataFrame& D, double rs, int k);
RcppExport SEXP _mcgraph_tvsRcpp(SEXP DSEXP, SEXP rsSEXP, SEXP kSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const DataFrame& >::type D(DSEXP);
    Rcpp::traits::input_parameter< double >::type rs(rsSEXP);
    Rcpp::traits::input_parameter< int >::type k(kSEXP);
    rcpp_result_gen = Rcpp::wrap(tvsRcpp(D, rs, k));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_mcgraph_bfsCpp", (DL_FUNC) &_mcgraph_bfsCpp, 2},
    {"_mcgraph_frgCpp", (DL_FUNC) &_mcgraph_frgCpp, 9},
    {"_mcgraph_graph2dataCpp", (DL_FUNC) &_mcgraph_graph2dataCpp, 9},
    {"_mcgraph_lvsCpp", (DL_FUNC) &_mcgraph_lvsCpp, 6},
    {"_mcgraph_tvsRcpp", (DL_FUNC) &_mcgraph_tvsRcpp, 3},
    {NULL, NULL, 0}
};

RcppExport void R_init_mcgraph(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
